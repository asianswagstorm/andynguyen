import React, { Component } from 'react';

import '../css/Home.css';
import Navbar from  './Navbar';
import Footer from './Footer';
class soen423 extends Component {

    render = () => {
		
        const navbar = <Navbar/>
				const footer = <Footer/>
        return (
            <div className="page-wrap">
            {navbar}

            <section id="main">

						<header id="header">
							<div className="split-para">Employee Management App <span>Distributed Systems </span></div>
						</header>

            <div className="inner">
						
								<h2>What is it?</h2>
								<p>This project manages employees in three servers running on different locations. The HR manager(end user) can add employee, manager records, get the number of employees and edit their records.
									It was implemented in 3 different ways: </p>
								<ul>
									<li><a target="_blank" rel="noopener noreferrer" href="https://github.com/asianswagstorm/newDistributedSystem/blob/master/srcA1/SOEN423A1_27333870.pdf" class="icon fa-github" > RMI Registry</a></li>
									<p>Java Remote Method Invocation: Java RMI's are used to bind remote objects together. In this example the 3 seperate country servers are connected via UDP to the RMI Registry. The servers can 
										interact with each other because the interface server  lies in the Registry. Java RMI is provided in a package in the Java Virtual Machine, and is strictly for object based programming.
										  </p>
									<li><a target="_blank" rel="noopener noreferrer" href="https://github.com/asianswagstorm/newDistributedSystem/blob/master/srcA2/Andy%20Nguyen%2027333870%20A2%20Design%20Document.pdf" class="icon fa-github" > CORBA</a></li>
									<p>Common Object Request Broker Architecture: Corba's Internet Inter-ORB Protocol (IIOP) allows objects to communicate with each other regardless of its programming language, since it was designed for generic languages. This provides a special function
										narrow() to be used instead of name casting objects. (Keep in mind that CORBA technology is outdated) 
										      </p>
									<li><a target="_blank" rel="noopener noreferrer" href="https://github.com/asianswagstorm/newDistributedSystem/blob/master/srcA3/Design%20Document%20A3%20Web%20Services%2027333870.pdf" class="icon fa-github" > SOAP WEB SERVICE </a></li>
									<p>Simple Object Access Protocol (SOAP Web Service): 3 seperate Web Service Definition Language documents are generated by the dynamic web project along with SOAP binding stubs. SOAP binding binds the 3 services to seperate URL located on port 8888 (defined in our initiation).
										SOAP protocal uses XML for message exchange.
									</p>
								</ul>  
								<h2>What I learned</h2>
								<p><strong>Threads</strong>, running 3 server threads on different ports. <strong>Synchronization</strong>, preventing threads running at the same time during the synchronized block, by using <strong>Locks</strong>. Relearned material on <strong>Operating Systems</strong> (deadlocking situations) mutual exclusion.   <strong>Interface Definition Language</strong>, Java IDL: is a tool used to develop <strong>CORBA</strong> applications, it auto generates (operation, helper, stub holder and POA) files these files help integrate and share objects from different models and languages.

								</p>
								
                </div>

                {footer}


                </section>
                </div>
            
            
         );
                 }
                    }

export default soen423;